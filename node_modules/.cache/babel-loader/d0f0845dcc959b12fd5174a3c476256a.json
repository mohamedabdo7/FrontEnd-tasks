{"ast":null,"code":"var _jsxFileName = \"/home/mhmdabdo/Desktop/calvita/frontend/src/components/AddTask/AddTask.tsx\",\n    _s = $RefreshSig$();\n\nimport { Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"../UI/Form/Button/Button\";\nimport Input from \"../UI/Form/Input/Input\";\nimport formValidationSchema from \"./FormValidation\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTask } from \"../../services/store/actions/tasksActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddTask = _ref => {\n  _s();\n\n  let {\n    isEdit\n  } = _ref;\n  const [addTaskForm, setAddTaskForm] = useState({\n    id: \"\",\n    title: \"\",\n    description: \"\"\n  });\n  useEffect(() => {\n    console.log(isEdit);\n  }, []);\n  const currentTask = useSelector(state => state.tasks.currentTask);\n  const [isEditTask, setIsEditTask] = useState(false);\n  const dispatch = useDispatch();\n\n  const addTaskHandler = values => {\n    // ApiService.addTask(values.id, values.title, values.description);\n    // ApiService.getAllTasks();\n    dispatch(addTask(values.id, values.title, values.description));\n  };\n\n  const editTaskHandler = values => {\n    console.log(\"okkkkkkkkkkk\");\n  };\n\n  const onChangeInputValue = (value, fieldName) => {\n    if (!fieldName) return; // console.log(fieldName);\n\n    if (fieldName === \"title\") {\n      setAddTaskForm({ ...addTaskForm,\n        [fieldName]: value\n      }); // console.log(\"idddddddddd field\", addTaskForm.title);\n    }\n\n    if (fieldName === \"description\") {\n      setAddTaskForm({ ...addTaskForm,\n        description: value\n      });\n      console.log(\"desc field\", addTaskForm);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-patient d-flex align-items-center justify-content-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      onClick: () => console.log(isEdit),\n      children: \"111111\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container d-flexflex-column justify-content-center align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: addTaskForm,\n        enableReinitialize: true,\n        validationSchema: formValidationSchema(),\n        onSubmit: values => {\n          addTaskHandler(values); // if (isEditTask) {\n          //   addTaskHandler(values);\n          // } else {\n          //   editTaskHandler(values);\n          // }\n        },\n        children: _ref2 => {\n          let {\n            handleSubmit\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"mt-4 mt-sm-0\",\n            autoComplete: \"off\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-column align-self-stretch align-self-sm-end\",\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"id\",\n                placeholder: `enter task id`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"title\",\n                placeholder: `enter task title`,\n                onChangeValue: onChangeInputValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"description\",\n                placeholder: `enter task description`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              name: `add task`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), isEdit && /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              name: `edit task`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddTask, \"wgsX8w5rGzI/L+SopCuQlSYJr5Y=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = AddTask;\nexport default AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["/home/mhmdabdo/Desktop/calvita/frontend/src/components/AddTask/AddTask.tsx"],"names":["Formik","React","useEffect","useState","Button","Input","formValidationSchema","useDispatch","useSelector","addTask","AddTask","isEdit","addTaskForm","setAddTaskForm","id","title","description","console","log","currentTask","state","tasks","isEditTask","setIsEditTask","dispatch","addTaskHandler","values","editTaskHandler","onChangeInputValue","value","fieldName","handleSubmit"],"mappings":"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","sourcesContent":["import { Formik, FormikProps } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"../UI/Form/Button/Button\";\nimport Input from \"../UI/Form/Input/Input\";\nimport ApiService from \"../../services/api/api\";\n\nimport formValidationSchema from \"./FormValidation\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setAllTasks,\n  addTask,\n} from \"../../services/store/actions/tasksActions\";\n\ntype Props = {\n  isEdit?: boolean;\n};\n\nconst AddTask: React.FC<Props> = ({ isEdit }) => {\n  const [addTaskForm, setAddTaskForm] = useState<any>({\n    id: \"\",\n    title: \"\",\n    description: \"\",\n  });\n\n  useEffect(() => {\n    console.log(isEdit);\n  }, []);\n\n  const currentTask = useSelector((state: any) => state.tasks.currentTask);\n  const [isEditTask, setIsEditTask] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const addTaskHandler = (values: any) => {\n    // ApiService.addTask(values.id, values.title, values.description);\n    // ApiService.getAllTasks();\n    dispatch(addTask(values.id, values.title, values.description));\n  };\n\n  const editTaskHandler = (values: any) => {\n    console.log(\"okkkkkkkkkkk\");\n  };\n\n  const onChangeInputValue = (value: string, fieldName?: string) => {\n    if (!fieldName) return;\n    // console.log(fieldName);\n    if (fieldName === \"title\") {\n      setAddTaskForm({\n        ...addTaskForm,\n        [fieldName]: value,\n      });\n      // console.log(\"idddddddddd field\", addTaskForm.title);\n    }\n    if (fieldName === \"description\") {\n      setAddTaskForm({\n        ...addTaskForm,\n        description: value,\n      });\n      console.log(\"desc field\", addTaskForm);\n    }\n  };\n\n  return (\n    <div className=\"add-patient d-flex align-items-center justify-content-center\">\n      <h1 onClick={() => console.log(isEdit)}>111111</h1>\n      <div className=\"form-container d-flexflex-column justify-content-center align-items-center\">\n        <Formik\n          initialValues={addTaskForm}\n          enableReinitialize\n          validationSchema={formValidationSchema()}\n          onSubmit={(values) => {\n            addTaskHandler(values);\n\n            // if (isEditTask) {\n            //   addTaskHandler(values);\n            // } else {\n            //   editTaskHandler(values);\n            // }\n          }}\n        >\n          {({ handleSubmit }: FormikProps<any>) => (\n            <form\n              onSubmit={handleSubmit}\n              className=\"mt-4 mt-sm-0\"\n              autoComplete=\"off\"\n            >\n              <div className=\"d-flex flex-column align-self-stretch align-self-sm-end\">\n                <Input type=\"text\" name=\"id\" placeholder={`enter task id`} />\n                <Input\n                  type=\"text\"\n                  name=\"title\"\n                  placeholder={`enter task title`}\n                  onChangeValue={onChangeInputValue}\n                />\n                <Input\n                  type=\"text\"\n                  name=\"description\"\n                  placeholder={`enter task description`}\n                />\n              </div>\n              <Button type=\"submit\" name={`add task`} />\n              {isEdit && <Button type=\"button\" name={`edit task`} />}\n              {/* {!isEditTask && <Button saveData={() => setIsEditTask(!is)} type=\"button\" name={`cancel edit`} />} */}\n            </form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default AddTask;\n"]},"metadata":{},"sourceType":"module"}